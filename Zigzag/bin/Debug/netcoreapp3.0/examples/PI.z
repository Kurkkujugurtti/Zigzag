pidigits(digits) {   
    ++digits

    l = digits * 10 / 3 + 2
    
    x = allocate(l * 8) as large
    r = allocate(l * 8) as large

    pi = allocate(digits * 8) as large

    j = 0

    loop (j, j < l, ++j) {
        x[j] = 20
    }

    i = 0

    loop (i, i < digits, ++i) {
        carry = 2 - 2
        j = 0

        loop (j, j < l, ++j) {
            num = l - j - 1
            dem = num * 2 + 1

            x[j] = x[j] + carry

            q = x[j] / dem
            r[j] = x[j] % dem

            carry = q * num
        }

        pi[i] = x[l-1] / 10

        r[l - 1] = x[l - 1] % 10

        j = 0
        loop (j, j < l, ++j) {
            x[j] = r[j] * 10
        }
    }

    result = allocate(digits * 8)

    c = 0
    i = digits - 1

    loop (i >= 0) {
        pi[i] += c
        c = pi[i] / 10

        result[i] = 48 + pi[i] % 10

        i -= 1
    }

    => result
}

run() {
    pi = pidigits(10000)
    print(pi)
}