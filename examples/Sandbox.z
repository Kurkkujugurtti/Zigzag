type Player
{
    num a
    num b
    num c

    init(num d, num e)
    {
        a = d
        b = e
    }

    func sum()
    {
        num sum = a + b
        c = sum

        return c
    }
}

func yeet()
{
    num a = 0
    num b = 0

    loop
    {
        b = a + a
    }
}

func run ()
{
    string a = new string('Hello ')
    string b = new string('World!')

    string c = a.combine(b)

    println(c)
    println(new string('Power: ').combine(to_string(2^16)))

    string input = readln()

    if (input.length() > 10)
    {
        println('> 10')
    }
    else
    {
        println('<= 10')
    }

    print(input)

    num x = 0
    num y = 1
    num z = 0

    num i = 0

    num g = -6
    println(to_string(g))
    println(to_string(g % 4))

    loop (i < 100)
    {
        z = x + y
        x = y
        y = z

        println(to_string(z))

        i = i + 1
    }

    var player

    player = new Player(1, 4)
    player.sum()

    println(to_string(player.c))

    # link mem = allocate(512)
    # mem[1] = mem[0] + 1

    

    loop
    {
        num j = 0

        loop (j < 10)
        {
            println(to_string(j))
            j = j + 1
        }

        readln()
    }
}